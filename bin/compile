#!/usr/bin/env bash

## VARIABLES
RUN_COMMAND=run_tor
TOR_VER=0.3.3.9
TOR_SRC_NAME=tor-${TOR_VER}.tar.gz
TOR_DIST_URL=https://dist.torproject.org/


## --

set -x

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
TOR_SIG_NAME=${TOR_SRC_NAME}.asc
TOR_SRC_URL=${TOR_DIST_URL}${TOR_SRC_NAME}
TOR_SRC_SIG_URL=${TOR_DIST_URL}${TOR_SIG_NAME}

################################################################################
# Try use cache
################################################################################
mkdir -p $CACHE_DIR
grep -wq "${TOR_SRC_NAME}" $CACHE_DIR/tor_version.txt
if [ $? -eq 0 ] ; then # Reusing cache
   TOR_IS_CACHED=1
else
   TOR_IS_CACHED=0
fi

################################################################################
# GET SOURCES
################################################################################
if [ $TOR_IS_CACHED -eq 0 ] ; then
    echo "Downloading ${TOR_SRC_URL}"
    wget -q $TOR_SRC_URL

    if [ $? - ne 0]; then
        echo "FAILED to obtain ${TOR_SRC_URL}" | indent
        exit 1
    fi

    echo "Downloading ${TOR_SRC_SIG_URL}"
    wget -q $TOR_SRC_SIG_URL

    if [ $? -ne 0 ]; then
        echo "FAILED to obtain signature ${TOR_SRC_SIG_URL}" | indent
        exit 1
    fi
fi
################################################################################
# VERIFY INTEGRITY
################################################################################
if [ $TOR_IS_CACHED -eq 0 ] ; then
    gpg --keyserver pool.sks-keyservers.net --recv-keys 0x4E2C6E8793298290
    gpg --keyserver keys.gnupg.net --recv A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89
    gpg --verify ${TOR_SIG_NAME} ${TOR_SRC_NAME} | grep -c "Good signature"
    if [ $? -lt 1 ]; then
        echo "FAILED to verify the signature" | indent
        exit 1
    fi
fi
################################################################################
# COMPILE
################################################################################
if [ $TOR_IS_CACHED -eq 0 ] ; then
    tar -zxf ${TOR_SRC_NAME}
    cd tor-${TOR_VER}
    ./configure --prefix=$CACHE_DIR/tor
    if [ $? -ne 0 ]; then
        echo "FAILED to configure for compliation" | indent
        exit 1
    fi

    make install
    if [ $? -ne 0 ]; then
        echo "FAILED to run make install" | indent
        exit  1
    fi
fi
################################################################################
# INSTALL
################################################################################

# Cached instalation to real build dir
cp -r $CACHE_DIR/tor ${BUILD_DIR}

# Saves the version just compiled
echo "${TOR_SRC_NAME}" > $CACHE_DIR/tor_version.txt

cat > ${BUILD_DIR}/tor/bin/${RUN_COMMAND} <<EOF
#!/usr/bin/env bash
mkdir -p "${HOME}/hidden_service"
echo "Setting up hidden service"
cat > ${HOME}/hidden_service/private_key <<EPK
\${HIDDEN_PRIVATE_KEY}
EPK
echo \${HIDDEN_DOT_ONION} > ${HOME}/hidden_service/hostname
echo "HiddenServiceDir ${HOME}/hidden_service/" > $HOME/tor/etc/tor/torrc
echo "HiddenServicePort 80 127.0.0.1:\${PORT}" >> $HOME/tor/etc/tor/torrc
# Use -f to be safe here.
$HOME/tor/bin/tor -f $HOME/tor/etc/tor/torrc &
exec \$*
EOF

chmod a+x ${BUILD_DIR}/tor/bin/${RUN_COMMAND}

echo "Installed Tor successfully" | indent
